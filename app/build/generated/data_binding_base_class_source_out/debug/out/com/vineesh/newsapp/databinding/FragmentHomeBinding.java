// Generated by view binder compiler. Do not edit!
package com.vineesh.newsapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.vineesh.newsapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RecyclerView RecyclerViewNewsList;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final EditText etSearch;

  @NonNull
  public final LinearLayout filterLayout;

  @NonNull
  public final ImageView imvFilter;

  @NonNull
  public final LinearLayout llSearchLayout;

  @NonNull
  public final TextView newToOld;

  @NonNull
  public final TextView oldToNew;

  @NonNull
  public final ShimmerFrameLayout shimmerLayout;

  private FragmentHomeBinding(@NonNull RelativeLayout rootView,
      @NonNull RecyclerView RecyclerViewNewsList, @NonNull ConstraintLayout constraintLayout,
      @NonNull EditText etSearch, @NonNull LinearLayout filterLayout, @NonNull ImageView imvFilter,
      @NonNull LinearLayout llSearchLayout, @NonNull TextView newToOld, @NonNull TextView oldToNew,
      @NonNull ShimmerFrameLayout shimmerLayout) {
    this.rootView = rootView;
    this.RecyclerViewNewsList = RecyclerViewNewsList;
    this.constraintLayout = constraintLayout;
    this.etSearch = etSearch;
    this.filterLayout = filterLayout;
    this.imvFilter = imvFilter;
    this.llSearchLayout = llSearchLayout;
    this.newToOld = newToOld;
    this.oldToNew = oldToNew;
    this.shimmerLayout = shimmerLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.RecyclerViewNewsList;
      RecyclerView RecyclerViewNewsList = ViewBindings.findChildViewById(rootView, id);
      if (RecyclerViewNewsList == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.et_search;
      EditText etSearch = ViewBindings.findChildViewById(rootView, id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.filterLayout;
      LinearLayout filterLayout = ViewBindings.findChildViewById(rootView, id);
      if (filterLayout == null) {
        break missingId;
      }

      id = R.id.imv_filter;
      ImageView imvFilter = ViewBindings.findChildViewById(rootView, id);
      if (imvFilter == null) {
        break missingId;
      }

      id = R.id.ll_search_layout;
      LinearLayout llSearchLayout = ViewBindings.findChildViewById(rootView, id);
      if (llSearchLayout == null) {
        break missingId;
      }

      id = R.id.new_to_old;
      TextView newToOld = ViewBindings.findChildViewById(rootView, id);
      if (newToOld == null) {
        break missingId;
      }

      id = R.id.old_to_new;
      TextView oldToNew = ViewBindings.findChildViewById(rootView, id);
      if (oldToNew == null) {
        break missingId;
      }

      id = R.id.shimmerLayout;
      ShimmerFrameLayout shimmerLayout = ViewBindings.findChildViewById(rootView, id);
      if (shimmerLayout == null) {
        break missingId;
      }

      return new FragmentHomeBinding((RelativeLayout) rootView, RecyclerViewNewsList,
          constraintLayout, etSearch, filterLayout, imvFilter, llSearchLayout, newToOld, oldToNew,
          shimmerLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
